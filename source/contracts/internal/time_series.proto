/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "google/protobuf/timestamp.proto";

option csharp_namespace = "GreenEnergyHub.TimeSeries.Contracts.Internal";

message TimeSeriesCommand {
  Document document = 1;
  Series series = 2;
  string correlation_id = 3;
}

message MarketParticipant {
  string id = 1;
  BusinessProcessRole business_process_role = 2;
}

message Document {
  string id = 1;
  google.protobuf.Timestamp request_date_time = 2;
  google.protobuf.Timestamp created_date_time = 3;
  MarketParticipant sender = 4;
  BusinessReasonCode business_reason_code = 5;
}

message Series {
  string id = 1;
  string metering_point_id = 2;
  MeteringPointType metering_point_type = 3;
  SettlementMethod settlement_method = 4;
  google.protobuf.Timestamp registration_date_time = 5;
  Product product = 6;
  MeasureUnit unit = 7;
  Resolution resolution = 8;
  google.protobuf.Timestamp start_date_time = 9;
  google.protobuf.Timestamp end_date_time = 10;
  repeated Point points = 11;
}

message Point {
  int32 position = 1;
  google.protobuf.Timestamp observation_date_time = 2;
  DecimalValue quantity = 3;
  Quality quality = 4;
}
  
/* ProtoBuf doesn't support decimal.
 * This implementation is inspired by https://docs.microsoft.com/en-us/aspnet/core/grpc/protobuf?view=aspnetcore-5.0#decimals.
 * The type is a candidate for separating out into a reusable package. This is however not (yet) done
 * due to challenges with multi-file contracts in PySpark.
 *
 * Example: 12345.6789 -> { units = 12345, nanos = 678900000 }
*/
message DecimalValue {
  // Whole units part of the amount
  int64 units = 1;
  // Nano units of the amount (10^-9)
  // Must be same sign as units
  sfixed32 nanos = 2;
}

enum BusinessReasonCode {
  BR_UNKNOWN = 0;
  BR_CONTINUOUS_METER_READING = 1;
  BR_PERIODIC_METERING = 2;
  BR_HISTORICAL_DATA = 3;
  BR_PERIODIC_FLEX_METERING = 4;
}

// TODO: The same options for sender and receiver?
enum BusinessProcessRole {
  BPR_UNKNOWN = 0;
  BPR_METERED_DATA_RESPONSIBLE = 4;
}

enum Quality {
  Q_UNKNOWN = 0;
  Q_MEASURED = 1;
  Q_ESTIMATED = 3;
  Q_QUANTITY_MISSING = 4;
}

enum Resolution {
  R_UNKNOWN = 0;
  R_QUARTER_OF_HOUR = 1;
  R_HOUR = 2;
}

enum Product {
  P_UNKNOWN = 0;
  P_TARIFF = 1;
  P_FUEL_QUANTITY = 2;
  P_POWER_ACTIVE = 3;
  P_POWER_REACTIVE = 4;
  P_ENERGY_ACTIVE = 5;
  P_ENERGY_REACTIVE = 6;
}

enum MeteringPointType {
  MPT_UNKNOWN = 0;
  MPT_CONSUMPTION = 1;
  MPT_PRODUCTION = 2;
  MPT_EXCHANGE = 3;
  MPT_VE_PRODUCTION = 4;
  MPT_ANALYSIS = 5;
  MPT_SURPLUS_PRODUCTION_GROUP = 6;
  MPT_NET_PRODUCTION = 7;
  MPT_SUPPLY_TO_GRID = 8;
  MPT_CONSUMPTION_FROM_GRID = 9;
  MPT_WHOLESALE_SERVICE = 10;
  MPT_OWN_PRODUCTION = 11;
  MPT_NET_FROM_GRID = 12;
  MPT_NET_TO_GRID = 13;
  MPT_TOTAL_CONSUMPTION = 14;
  MPT_GRID_LOSS_CORRECTION = 15;
  MPT_ELECTRICAL_HEATING = 16;
  MPT_NET_CONSUMPTION = 17;
  MPT_OTHER_CONSUMPTION = 18;
  MPT_OTHER_PRODUCTION = 19;
  MPT_EXCHANGE_REACTIVE_ENERGY = 20;
  MPT_INTERNAL_USE = 21;
}

enum SettlementMethod {
  SM_UNKNOWN = 0;
  SM_PROFILED = 1;
  SM_NON_PROFILED = 2;
  SM_FLEX = 3;
  // Settlment method is not specified
  SM_NOT_SET = 999;
}

enum MeasureUnit {
  MU_UNKNOWN = 0;
  MU_KILO_WATT_HOUR = 1;
  MU_MEGA_WATT_HOUR = 2;
  MU_KILO_WATT = 3;
  MU_MEGA_WATT = 4;
  MU_KILO_VAR_HOUR = 5;
  MU_MEGA_VAR = 6;
  MU_TARIFF = 7;
  MU_TONNE = 8;
}
