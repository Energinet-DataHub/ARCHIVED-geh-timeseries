/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License; Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing; software
 * distributed under the License is distributed on an "AS IS" BASIS;
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND; either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Time Series Domain related messages.
 */
syntax = "proto3";

import "google/protobuf/timestamp.proto";

/**
 * Green Energy Hub type imports.
 */
//import "Types/DecimalValue.proto";

option csharp_namespace = "GreenEnergyHub.TimeSeries.Contracts.Internal";

/**
 * Represents a TimeSeriesCommand
 */
message TimeSeriesCommandContract {
  DocumentContract document = 1;
  SeriesContract series = 2;
  string correlation_id = 3;
}

message MarketParticipantContract {
    string id = 1;
    BusinessProcessRoleContract business_proces_role = 2;
}

/**
 * Represents a TimeSeries Document
 */
message DocumentContract {
  string id = 1;
  google.protobuf.Timestamp request_date_time = 2;
  google.protobuf.Timestamp created_date_time = 3;
  MarketParticipantContract sender = 4;
  BusinessReasonCodeContract business_reason_code = 6;
}

/**
 * Represents TimeSeries Series
 */
message SeriesContract {
  string id = 1;
  string metering_point_id = 2;
  MeteringPointTypeContract metering_point_type = 3;
  SettlementMethodContract settlement_method = 4;
  google.protobuf.Timestamp registration_date_time = 5;
  ProductContract product = 6;
  MeasureUnitContract measure_unit = 7;
  ResolutionContract resolution = 8;
  google.protobuf.Timestamp start_date_time = 9;
  google.protobuf.Timestamp end_date_time = 10;
  repeated PointContract points = 11;
}

message PointContract {
    int32 position = 1;
    google.protobuf.Timestamp observation_date_time = 2;
    DecimalValueContract quantity = 3;
    QualityContract quality = 4;
  }
  
// Example: 12345.6789 -> { units = 12345, nanos = 678900000 }
message DecimalValueContract {

    // Whole units part of the amount
    int64 units = 1;

    // Nano units of the amount (10^-9)
    // Must be same sign as units
    sfixed32 nanos = 2;
}

enum BusinessReasonCodeContract {
  BRC_Unknown = 0;
  BRC_ContinuousMeterReading = 1;
  BRC_PeriodicMetering = 2;
  BRC_HistoricalData = 3;
  BRC_PeriodicFlexMetering = 4;
}

// TODO: The same options for sender and receiver?
enum BusinessProcessRoleContract {
  BPR_Unknown = 0;
  //BPR_EnergySupplier = 1;
  //BPR_GridAccessProvider = 2;
  //BPR_SystemOperator = 3;
  BPR_MeteredDataResponsible = 4;
  //BPR_EnergyAgency = 5;
  //BPR_MeteredDataAdministrator = 6;
}

enum QualityContract {
  QC_Unknown = 0;
  QC_Measured = 1;
  //QC_Revised = 2;
  QC_Estimated = 3;
  QC_QuantityMissing = 4;
  //QC_Calculated = 5;
}

enum ResolutionContract {
  RC_Unknown = 0;
  RC_QuarterOfHour = 1;
  RC_Hour = 2;
  //RC_Day = 3;
  //RC_Month = 4;
}

enum ProductContract {
  PC_Unknown = 0;
  PC_Tariff = 1;
  PC_FuelQuantity = 2;
  PC_PowerActive = 3;
  PC_PowerReactive = 4;
  PC_EnergyActive = 5;
  PC_EnergyReactive = 6;
}

enum MeteringPointTypeContract {
  MPTC_Unknown = 0;
  MPTC_Consumption = 1;
  MPTC_Production = 2;
  MPTC_Exchange = 3;
  MPTC_VeProduction = 4;
  MPTC_Analysis = 5;
  MPTC_SurplusProductionGroup = 6;
  MPTC_NetProduction = 7;
  MPTC_SupplyToGrid = 8;
  MPTC_ConsumptionFromGrid = 9;
  MPTC_WholesaleService = 10;
  MPTC_OwnProduction = 11;
  MPTC_NetFromGrid = 12;
  MPTC_NetToGrid = 13;
  MPTC_TotalConsumption = 14;
  MPTC_GridLossCorrection = 15;
  MPTC_ElectricalHeating = 16;
  MPTC_NetConsumption = 17;
  MPTC_OtherConsumption = 18;
  MPTC_OtherProduction = 19;
  MPTC_ExchangeReactiveEnergy = 20;
  MPTC_InternalUse = 21;
}

enum SettlementMethodContract {
  SMC_Unknown = 0;
  SMC_Profiled = 1;
  SMC_NonProfiled = 2;
  SMC_Flex = 3;
  SMC_Null = 999;
}

enum MeasureUnitContract {
  MUC_Unknown = 0;
  MUC_KiloWattHour = 1;
  MUC_MegaWattHour = 2;
  MUC_KiloWatt = 3;
  MUC_MegaWatt = 4;
  MUC_KiloVarHour = 5;
  MUC_MegaVar = 6;
  MUC_Tariff = 7;
  MUC_Tonne = 8;
}
