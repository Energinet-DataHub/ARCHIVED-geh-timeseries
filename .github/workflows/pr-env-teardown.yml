# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: PR Environment - Tear Down

on:
  pull_request:
    branches:
      - main
    paths:
      - build/infrastructure/**
      - .github/workflows/pr-env-teardown.yml
    types: [closed]
env:
  ORGANISATION_NAME: endk
  PROJECT_NAME: 'time${{ github.event.number }}'
  RESOURCE_GROUP_NAME: Development
  ENVIRONMENT_SHORT: u

jobs:
  infra_destroy:
    name: Destroying infrastructure, PR closed
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Environment Secrets
        run: |  
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_SPN_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_OBJECT_ID=${{ secrets.AZURE_SPN_OBJECT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_SPN_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_wrapper: false

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

      # Try not to reference TF_VAR variables in pipeline yml files, only values should be set and they should be read in terraform only
      # rather create duplicate ENV pipeline vatiable if needed to separate concerns
      - name: Set TF Vars
        run: |
          echo "TF_VAR_environment=${{ env.ENVIRONMENT_SHORT }}" >> $GITHUB_ENV
          echo "TF_VAR_organisation=${{ env.ORGANISATION_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_project=${{ env.PROJECT_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_resource_group_name=${{ secrets.AZURE_RG_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_tenant_id=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_spn_object_id=${{ secrets.AZURE_SPN_OBJECT_ID }}" >> $GITHUB_ENV

      - name: Configure Terraform Backend
        uses: ./.github/actions/configure-terraform-backend
        with:
          backend-file-path: "./build/infrastructure/backend.tf"
          resource-group-name: "${{ secrets.AZURE_RG_NAME }}"
          storage-account-name: "tfstate${{ env.PROJECT_NAME }}${{ env.ENVIRONMENT_SHORT }}"

      - name: Terraform Init
        working-directory: ./build/infrastructure
        run: terraform init

      - name: Terraform Destroy
        working-directory: ./build/infrastructure
        run: terraform destroy -no-color -auto-approve
        continue-on-error: false
