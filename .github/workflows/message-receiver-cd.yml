# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Message receiver CD

on:
  push:
    branches:
      - main
    paths:
      - source/GreenEnergyHub.TimeSeries/**
      - .github/workflows/message-receiver-cd.yml
      - .github/actions/dotnet-build-and-test/**
  workflow_dispatch: {}

env:
  CSPROJ_FILE_PATH: 'source/GreenEnergyHub.TimeSeries/source/GreenEnergyHub.TimeSeries.MessageReceiver/GreenEnergyHub.TimeSeries.MessageReceiver.csproj'
  SOLUTION_FILE_PATH: 'source/GreenEnergyHub.TimeSeries/GreenEnergyHub.TimeSeries.sln'
  DOTNET_VERSION: '5.0.202'
  AZURE_FUNCTIONAPP_BASE_NAME: 'azfun-message-receiver-${{ secrets.PROJECT_NAME }}-${{ secrets.ORGANISATION_NAME }}'

jobs:
  build_messagereceiver:
    name: Build Message receiver
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Setup .NET 3.1 environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
        
      - name: Setup .NET ${{ env.DOTNET_VERSION }} environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Build and test project
        uses: Energinet-DataHub/.github/.github/actions/dotnet-build-and-test@main
        with:
          CSPROJ_FILE_PATH: ${{ env.CSPROJ_FILE_PATH }}
          SOLUTION_FILE_PATH: ${{ env.SOLUTION_FILE_PATH }}
          OUTPUT_PATH: '${{ github.workspace }}/output'

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: drop
          path: '${{ github.workspace }}/output'

  deploy_messagereceiver_development:
    name: Deploy function to Development
    needs: build_messagereceiver
    runs-on: ubuntu-latest
    environment:
      name: Development
    steps:
      - name: Download artifact 
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: drop

      - name: Set Environment Secrets
        shell: bash
        run: |
          echo "FUNCTIONAPP_NAME=${{ env.AZURE_FUNCTIONAPP_BASE_NAME }}-u" >> $GITHUB_ENV

      - name: Get function publish profile
        id: get-publish-profile
        uses: Energinet-DataHub/.github/.github/actions/get-publish-profile@main
        with:
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID }}
          AZURE_SPN_SECRET: ${{ secrets.AZURE_SPN_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RG_NAME: ${{ secrets.AZURE_RG_NAME }}
          AZURE_FUNCTIONAPP_NAME: ${{ env.FUNCTIONAPP_NAME }}
  
      - name: Deploy function
        uses: Azure/functions-action@v1.3.2
        with:
          app-name: ${{ env.FUNCTIONAPP_NAME }}
          package: ${{ github.workspace }}/drop
          publish-profile: ${{ steps.get-publish-profile.outputs.publish-profile }}
 
  deploy_messagereceiver_test:
    name: Deploy function to Test
    needs: deploy_messagereceiver_development
    runs-on: ubuntu-latest
    environment:
      name: Test
    steps:
      - name: Download artifact 
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: drop

      - name: Set Environment Secrets
        shell: bash
        run: |
          echo "FUNCTIONAPP_NAME=${{ env.AZURE_FUNCTIONAPP_BASE_NAME }}-t" >> $GITHUB_ENV

      - name: Get function publish profile
        id: get-publish-profile
        uses: Energinet-DataHub/.github/.github/actions/get-publish-profile@main
        with:
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID }}
          AZURE_SPN_SECRET: ${{ secrets.AZURE_SPN_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RG_NAME: ${{ secrets.AZURE_RG_NAME }}
          AZURE_FUNCTIONAPP_NAME: ${{ env.FUNCTIONAPP_NAME }}
      
      - name: Deploy function
        uses: Azure/functions-action@v1.3.2
        with:
          app-name: ${{ env.FUNCTIONAPP_NAME }}
          package: ${{ github.workspace }}/drop
          publish-profile: ${{ steps.get-publish-profile.outputs.publish-profile }}
 
  deploy_messagereceiver_preproduction:
    name: Deploy function to Preproduction
    needs: deploy_messagereceiver_test
    runs-on: ubuntu-latest
    environment:
      name: Preproduction
    steps:
      - name: Download artifact 
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: drop

      - name: Set Environment Secrets
        shell: bash
        run: |
          echo "FUNCTIONAPP_NAME=${{ env.AZURE_FUNCTIONAPP_BASE_NAME }}-b" >> $GITHUB_ENV

      - name: Get function publish profile
        id: get-publish-profile
        uses: Energinet-DataHub/.github/.github/actions/get-publish-profile@main
        with:
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID }}
          AZURE_SPN_SECRET: ${{ secrets.AZURE_SPN_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RG_NAME: ${{ secrets.AZURE_RG_NAME }}
          AZURE_FUNCTIONAPP_NAME: ${{ env.FUNCTIONAPP_NAME }}
      
      - name: Deploy function
        uses: Azure/functions-action@v1.3.2
        with:
          app-name: ${{ env.FUNCTIONAPP_NAME }}
          package: ${{ github.workspace }}/drop
          publish-profile: ${{ steps.get-publish-profile.outputs.publish-profile }}
 
  deploy_messagereceiver_production:
    name: Deploy function to Production
    needs: deploy_messagereceiver_preproduction
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - name: Download artifact 
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: drop

      - name: Set Environment Secrets
        shell: bash
        run: |
          echo "FUNCTIONAPP_NAME=${{ env.AZURE_FUNCTIONAPP_BASE_NAME }}-p" >> $GITHUB_ENV

      - name: Get function publish profile
        id: get-publish-profile
        uses: Energinet-DataHub/.github/.github/actions/get-publish-profile@main
        with:
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID }}
          AZURE_SPN_SECRET: ${{ secrets.AZURE_SPN_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RG_NAME: ${{ secrets.AZURE_RG_NAME }}
          AZURE_FUNCTIONAPP_NAME: ${{ env.FUNCTIONAPP_NAME }}
      
      - name: Deploy function
        uses: Azure/functions-action@v1.3.2
        with:
          app-name: ${{ env.FUNCTIONAPP_NAME }}
          package: ${{ github.workspace }}/drop
          publish-profile: ${{ steps.get-publish-profile.outputs.publish-profile }}
